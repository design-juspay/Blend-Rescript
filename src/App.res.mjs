// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as TabDemo from "./demo/TabDemo.res.mjs";
import * as TagDemo from "./demo/TagDemo.res.mjs";
import * as AlertDemo from "./demo/AlertDemo.res.mjs";
import * as RadioDemo from "./demo/RadioDemo.res.mjs";
import * as AvatarDemo from "./demo/AvatarDemo.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as ButtonDemo from "./demo/ButtonDemo.res.mjs";
import * as SwitchDemo from "./demo/SwitchDemo.res.mjs";
import * as CheckboxDemo from "./demo/CheckboxDemo.res.mjs";
import * as SnackbarDemo from "./demo/SnackbarDemo.res.mjs";
import * as AccordionDemo from "./demo/AccordionDemo.res.mjs";
import * as AvatarGroupDemo from "./demo/AvatarGroupDemo.res.mjs";
import * as ButtonGroupDemo from "./demo/ButtonGroupDemo.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as DateRangePickerDemo from "./demo/DateRangePickerDemo.res.mjs";
import * as DesignSystem from "@vinitjuspay/design-system";

function App$TooltipDemo2(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tooltip V2 Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsx(DesignSystem.TooltipV2, {
                      children: JsxRuntime.jsx("button", {
                            children: "Hover me"
                          }),
                      content: "This is a basic tooltip",
                      side: "bottom"
                    })
              ]
            });
}

function App$BreadcrumbDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Breadcrumb Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsx(DesignSystem.Breadcrumb, {
                      variant: "default",
                      items: [
                        {
                          label: "Home",
                          href: "/",
                          onClick: (function () {
                              console.log("Home clicked");
                            })
                        },
                        {
                          label: "Products",
                          href: "/products",
                          onClick: (function () {
                              console.log("Products clicked");
                            })
                        },
                        {
                          label: "Categories",
                          href: "/categories",
                          onClick: (function () {
                              console.log("Categories clicked");
                            })
                        }
                      ]
                    })
              ]
            });
}

var components = [
  {
    variant: "Buttons",
    label: "Buttons"
  },
  {
    variant: "Tags",
    label: "Tags"
  },
  {
    variant: "Snackbars",
    label: "Snackbars"
  },
  {
    variant: "TabsComponent",
    label: "Tabs"
  },
  {
    variant: "Alerts",
    label: "Alerts"
  },
  {
    variant: "Breadcrumb",
    label: "Breadcrumb"
  },
  {
    variant: "ButtonGroup",
    label: "ButtonGroup"
  },
  {
    variant: "Avatar",
    label: "Avatar"
  },
  {
    variant: "AvatarGroup",
    label: "AvatarGroup"
  },
  {
    variant: "Radio",
    label: "Radio"
  },
  {
    variant: "Switch",
    label: "Switch"
  },
  {
    variant: "DateRangePicker",
    label: "DateRangePicker"
  },
  {
    variant: "TooltipDemo2",
    label: "TooltipDemo2"
  },
  {
    variant: "AccordionDemo",
    label: "AccordionDemo"
  },
  {
    variant: "CheckboxDemo",
    label: "CheckboxDemo"
  }
];

function App$Sidebar(props) {
  var activeComponent = props.activeComponent;
  var onSelect = props.onSelect;
  var getItemClass = function (component) {
    var baseClass = "px-4 py-2 w-full text-left transition-colors duration-200";
    var activeClass = baseClass + " bg-blue-500 text-white";
    var inactiveClass = baseClass + " hover:bg-gray-100";
    if (activeComponent === component) {
      return activeClass;
    } else {
      return inactiveClass;
    }
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("h2", {
                            children: "Components",
                            className: "text-xl font-bold"
                          }),
                      className: "p-4 border-b border-gray-200"
                    }),
                JsxRuntime.jsx("nav", {
                      children: Belt_Array.map(components, (function (param) {
                              var label = param.label;
                              var variant = param.variant;
                              return JsxRuntime.jsx("button", {
                                          children: label,
                                          className: getItemClass(variant),
                                          onClick: (function (param) {
                                              onSelect(variant);
                                            })
                                        }, label);
                            })),
                      className: "py-2"
                    })
              ],
              className: "w-64 h-screen bg-white border-r border-gray-200 fixed left-0 top-0 overflow-y-auto"
            });
}

function App(props) {
  var match = React.useState(function () {
        return "Buttons";
      });
  var setActiveComponent = match[1];
  var activeComponent = match[0];
  var tmp;
  switch (activeComponent) {
    case "Buttons" :
        tmp = JsxRuntime.jsx(ButtonDemo.ButtonDemo.make, {});
        break;
    case "Tags" :
        tmp = JsxRuntime.jsx(TagDemo.TagDemo.make, {});
        break;
    case "Snackbars" :
        tmp = JsxRuntime.jsx(SnackbarDemo.SnackbarDemo.make, {});
        break;
    case "TabsComponent" :
        tmp = JsxRuntime.jsx(TabDemo.TabsPreviewDemo.make, {});
        break;
    case "Alerts" :
        tmp = JsxRuntime.jsx(AlertDemo.AlertDemo.make, {});
        break;
    case "Breadcrumb" :
        tmp = JsxRuntime.jsx(App$BreadcrumbDemo, {});
        break;
    case "ButtonGroup" :
        tmp = JsxRuntime.jsx(ButtonGroupDemo.ButtonGroupDemo.make, {});
        break;
    case "Avatar" :
        tmp = JsxRuntime.jsx(AvatarDemo.AvatarDemo.make, {});
        break;
    case "AvatarGroup" :
        tmp = JsxRuntime.jsx(AvatarGroupDemo.AvatarGroupDemo.make, {});
        break;
    case "Radio" :
        tmp = JsxRuntime.jsx(RadioDemo.RadioDemo.make, {});
        break;
    case "Switch" :
        tmp = JsxRuntime.jsx(SwitchDemo.SwitchDemo.make, {});
        break;
    case "DateRangePicker" :
        tmp = JsxRuntime.jsx(DateRangePickerDemo.DateRangePickerDemo.make, {});
        break;
    case "TooltipDemo2" :
        tmp = JsxRuntime.jsx(App$TooltipDemo2, {});
        break;
    case "AccordionDemo" :
        tmp = JsxRuntime.jsx(AccordionDemo.AccordionDemo.make, {});
        break;
    case "CheckboxDemo" :
        tmp = JsxRuntime.jsx(CheckboxDemo.CheckboxDemo.make, {});
        break;
    
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(App$Sidebar, {
                      onSelect: (function (component) {
                          setActiveComponent(function (param) {
                                return component;
                              });
                        }),
                      activeComponent: activeComponent
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h1", {
                              children: "Design System Components",
                              className: "text-3xl font-bold mb-8 text-center"
                            }),
                        tmp
                      ],
                      className: "ml-64 flex-1 p-6"
                    })
              ],
              className: "flex"
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
