// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function App$ButtonDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Button Variants Demo",
                      className: "text-2xl font-bold mb-6"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Typesss",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      onClick: (function (param) {
                                          console.log("Primary clicked");
                                        }),
                                      text: "Primary Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          console.log("Secondary clicked");
                                        }),
                                      text: "Secondary Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "danger",
                                      onClick: (function (param) {
                                          console.log("Danger clicked");
                                        }),
                                      text: "Danger Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "success",
                                      onClick: (function (param) {
                                          console.log("Success clicked");
                                        }),
                                      text: "Success Button"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "sm",
                                      text: "Small Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "md",
                                      text: "Medium Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "lg",
                                      text: "Large Button"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Enabled Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      isDisabled: true,
                                      text: "Disabled Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Loading",
                                      isLoading: true
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Subtypes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Default Button",
                                      subType: "default"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Link Button",
                                      subType: "link"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      subType: "iconOnly",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ThumbsUp, {
                                                size: 18
                                              })),
                                      ariaLabel: "Icon only button"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Buttons with Icons",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Left Icon",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronLeft, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Right Icon",
                                      rightIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronRight, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Both Icons",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronLeft, {
                                                size: 18
                                              })),
                                      rightIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronRight, {
                                                size: 18
                                              }))
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Icon Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Download",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Download, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Mail",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Mail, {
                                                size: 18,
                                                color: "#666"
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "success",
                                      subType: "iconOnly",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 18
                                              })),
                                      ariaLabel: "Success"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Full Width Button",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.Button, {
                              buttonType: "primary",
                              text: "Full Width Button",
                              fullWidth: true
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button with Children",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.Button, {
                              buttonType: "success",
                              children: Caml_option.some(JsxRuntime.jsxs("div", {
                                        children: [
                                          JsxRuntime.jsx(LucideReact.Check, {
                                                size: 18,
                                                className: "mr-2"
                                              }),
                                          JsxRuntime.jsx("span", {
                                                children: "Custom Content"
                                              })
                                        ],
                                        className: "flex items-center"
                                      }))
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$TagDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tag Variants Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "noFill",
                                      label: "No Fill"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      label: "Attentive"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "subtle",
                                      label: "Subtle"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Styles",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      tagStyle: "rounded",
                                      color: "purple",
                                      label: "Vinit OG"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      tagStyle: "rounded",
                                      label: "Rounded"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "xs",
                                      label: "Extra Small"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "sm",
                                      label: "Small"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "md",
                                      label: "Medium"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "lg",
                                      label: "Large"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Colors",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "neutral",
                                      label: "Neutral"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "primary",
                                      label: "Primary"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "success",
                                      label: "Success"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "error",
                                      label: "Error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "warning",
                                      label: "Warning"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "purple",
                                      label: "Purple"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tags with Slots",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Leading Icon",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Trailing Icon"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Both Slots",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Split Tags",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      leftLabel: "Left",
                                      rightLabel: "Right"
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      leftLabel: "With",
                                      rightLabel: "Icons",
                                      leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      color: "success",
                                      leftLabel: "Success",
                                      rightLabel: "Tag"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Combined Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      tagStyle: "rounded",
                                      size: "lg",
                                      color: "success",
                                      label: "Combined",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 16
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "subtle",
                                      size: "sm",
                                      color: "error",
                                      label: "Error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      tagStyle: "rounded",
                                      size: "md",
                                      color: "primary",
                                      leftLabel: "Split",
                                      rightLabel: "Tag"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$SnackbarDemo(props) {
  var match = React.useState(function () {
        return false;
      });
  var setShowSnackbar = match[1];
  var match$1 = React.useState(function () {
        return "success";
      });
  var setSnackbarVariant = match$1[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Snackbar Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Snackbar Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "success";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Success Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "danger",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "error";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Error Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "info";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Info Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "warning";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Warning Snackbar"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                match[0] ? JsxRuntime.jsx(DesignSystem.Snackbar, {
                        type_: match$1[0],
                        heading: "Snackbar Heading",
                        message: "This is a detailed message explaining what happened",
                        alertMessage: "Optional alert message for additional context",
                        showIcon: true,
                        autoClose: true,
                        position: "topLeft",
                        onClose: (function () {
                            setShowSnackbar(function (param) {
                                  return false;
                                });
                          })
                      }) : null
              ]
            });
}

function App$TooltipDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tooltip Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsx(DesignSystem.Tooltip, {
                      children: JsxRuntime.jsx("button", {
                            children: "Hover me"
                          }),
                      content: "This is a basic tooltip"
                    })
              ]
            });
}

function App$TabsPreviewDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tabs Variants Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Boxed Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "boxed",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "boxed",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "boxed",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "boxed",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "boxed",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Floating Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "floating",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "floating",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "floating",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "floating",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "floating",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Underline Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "underline",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "underline",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "underline",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "underline",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "underline",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    })
              ]
            });
}

function App$AlertDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Alert Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Alert Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Primary Alert",
                                      description: "This is a primary alert with important information.",
                                      variant: "primary"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Success Alert",
                                      description: "Your action was completed successfully.",
                                      variant: "success",
                                      icon: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 16
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Warning Alert",
                                      description: "Please be aware of this important warning.",
                                      variant: "warning"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Error Alert",
                                      description: "An error occurred while processing your request.",
                                      variant: "error"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Alert Styles",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Fill Style",
                                      description: "This alert uses the fill style.",
                                      variant: "primary",
                                      style: "fill"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "Subtle Style",
                                      description: "This alert uses the subtle style.",
                                      variant: "primary",
                                      style: "subtle"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Alert, {
                                      heading: "No Fill Style",
                                      description: "This alert uses the no fill style.",
                                      variant: "primary",
                                      style: "noFill"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$BreadcrumbDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Breadcrumb Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsx(DesignSystem.Breadcrumb, {
                      variant: "default",
                      items: [
                        {
                          label: "Home",
                          href: "/",
                          onClick: (function () {
                              console.log("Home clicked");
                            })
                        },
                        {
                          label: "Products",
                          href: "/products",
                          onClick: (function () {
                              console.log("Products clicked");
                            })
                        },
                        {
                          label: "Categories",
                          href: "/categories",
                          onClick: (function () {
                              console.log("Categories clicked");
                            })
                        }
                      ]
                    })
              ]
            });
}

function App$ButtonGroupDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "ButtonGroup Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "ButtonGroup Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                      size: "sm",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "primary",
                                              text: "Primary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Secondary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Action"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                      size: "md",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "primary",
                                              text: "Primary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Secondary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Action"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                      size: "lg",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "primary",
                                              text: "Primary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Secondary"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.Button, {
                                              buttonType: "secondary",
                                              text: "Action"
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "ButtonGroup Modes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Mode: singlePrimary (default)",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                              mode: "singlePrimary",
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "primary",
                                                      text: "Primary"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "danger",
                                                      text: "Danger"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "success",
                                                      text: "Success"
                                                    })
                                              ]
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Mode: allSecondary",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                              mode: "allSecondary",
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "primary",
                                                      text: "Primary"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "danger",
                                                      text: "Danger"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "success",
                                                      text: "Success"
                                                    })
                                              ]
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Mode: noTransform",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                              mode: "noTransform",
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "primary",
                                                      text: "Primary"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "danger",
                                                      text: "Danger"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "success",
                                                      text: "Success"
                                                    })
                                              ]
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Stacked vs Non-stacked",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "isStacked: true (default)",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                              isStacked: true,
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "primary",
                                                      text: "First"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "secondary",
                                                      text: "Second"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "secondary",
                                                      text: "Third"
                                                    })
                                              ]
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "isStacked: false",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsxs(DesignSystem.ButtonGroup, {
                                              isStacked: false,
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "primary",
                                                      text: "First"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "secondary",
                                                      text: "Second"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Button, {
                                                      buttonType: "secondary",
                                                      text: "Third"
                                                    })
                                              ]
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$AvatarDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Avatar Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Avatar Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "SM",
                                              size: "sm"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Small",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "RE",
                                              size: "regular"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Regular",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "MD",
                                              size: "md"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Medium",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "LG",
                                              size: "lg"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Large",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "XL",
                                              size: "xl"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Extra Large",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    })
                              ],
                              className: "flex items-center gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Avatar Shapes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "CR",
                                              size: "lg",
                                              shape: "circular"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Circular",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "RO",
                                              size: "lg",
                                              shape: "rounded"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Rounded",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    })
                              ],
                              className: "flex items-center gap-8"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Avatar with Image vs Fallback",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              src: "https://i.pravatar.cc/150?img=1",
                                              alt: "User avatar",
                                              size: "lg"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "With Image",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "JD",
                                              size: "lg"
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "With Fallback",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    })
                              ],
                              className: "flex items-center gap-8"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Online Status",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              src: "https://i.pravatar.cc/150?img=2",
                                              alt: "Online user",
                                              size: "lg",
                                              online: true
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Online",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              src: "https://i.pravatar.cc/150?img=3",
                                              alt: "Offline user",
                                              size: "lg",
                                              online: false
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "Offline",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    })
                              ],
                              className: "flex items-center gap-8"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Comprehensive Examples",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              src: "https://i.pravatar.cc/150?img=4",
                                              alt: "User 1",
                                              size: "md",
                                              shape: "circular",
                                              online: true
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "User 1",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              fallback: "AB",
                                              size: "md",
                                              shape: "circular",
                                              online: true
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "User 2",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.Avatar, {
                                              src: "https://i.pravatar.cc/150?img=6",
                                              alt: "User 3",
                                              size: "md",
                                              shape: "rounded",
                                              online: false
                                            }),
                                        JsxRuntime.jsx("span", {
                                              children: "User 3",
                                              className: "mt-2 text-sm"
                                            })
                                      ],
                                      className: "flex flex-col items-center"
                                    })
                              ],
                              className: "grid grid-cols-3 gap-8"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$AvatarGroupDemo(props) {
  var avatarData = [
    {
      id: "1",
      src: "https://i.pravatar.cc/150?img=1",
      alt: "User 1",
      fallback: "U1",
      size: undefined,
      shape: undefined,
      online: true
    },
    {
      id: "2",
      src: "https://i.pravatar.cc/150?img=2",
      alt: "User 2",
      fallback: "U2",
      size: undefined,
      shape: undefined,
      online: false
    },
    {
      id: "3",
      src: "https://i.pravatar.cc/150?img=3",
      alt: "User 3",
      fallback: "U3",
      size: undefined,
      shape: undefined,
      online: true
    },
    {
      id: "4",
      src: undefined,
      alt: "User 4",
      fallback: "U4",
      size: undefined,
      shape: undefined,
      online: undefined
    },
    {
      id: "5",
      src: "https://i.pravatar.cc/150?img=5",
      alt: "User 5",
      fallback: "U5",
      size: undefined,
      shape: undefined,
      online: undefined
    },
    {
      id: "6",
      src: "https://i.pravatar.cc/150?img=6",
      alt: "User 6",
      fallback: "U6",
      size: undefined,
      shape: undefined,
      online: undefined
    }
  ];
  var match = React.useState(function () {
        return [];
      });
  var setSelectedAvatarIds = match[1];
  var selectedAvatarIds = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Avatar Group Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic Avatar Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                    avatars: avatarData
                                  }),
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Avatar Group Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Size: small",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              size: "sm"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Size: regular",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              size: "regular"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Size: medium",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              size: "md"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Size: large",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              size: "lg"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Size: extra large",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              size: "xl"
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Max Count Variations",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Max Count: 3",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              maxCount: 3
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Max Count: 4",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              maxCount: 4
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Max Count: 5",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: avatarData,
                                              maxCount: 5
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Selection Functionality",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("div", {
                                            children: "Selectable Avatars",
                                            className: "mb-2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                            avatars: avatarData,
                                            selectedAvatarIds: selectedAvatarIds,
                                            onSelectionChange: (function (ids) {
                                                setSelectedAvatarIds(function (param) {
                                                      return ids;
                                                    });
                                              })
                                          }),
                                      JsxRuntime.jsx("div", {
                                            children: "Selected IDs: " + selectedAvatarIds.join(", "),
                                            className: "mt-2"
                                          })
                                    ]
                                  }),
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Edge Cases",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Empty Avatar Array",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: []
                                            }),
                                        JsxRuntime.jsx("div", {
                                              children: "No avatars to display",
                                              className: "mt-2 text-gray-500 italic"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Avatars with Fallbacks Only",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.AvatarGroup, {
                                              avatars: [
                                                {
                                                  id: "1",
                                                  src: undefined,
                                                  alt: "User 1",
                                                  fallback: "U1",
                                                  size: undefined,
                                                  shape: undefined,
                                                  online: undefined
                                                },
                                                {
                                                  id: "2",
                                                  src: undefined,
                                                  alt: "User 2",
                                                  fallback: "U2",
                                                  size: undefined,
                                                  shape: undefined,
                                                  online: undefined
                                                },
                                                {
                                                  id: "3",
                                                  src: undefined,
                                                  alt: "User 3",
                                                  fallback: "U3",
                                                  size: undefined,
                                                  shape: undefined,
                                                  online: undefined
                                                }
                                              ]
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-6"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$RadioDemo(props) {
  var match = React.useState(function () {
        return "option1";
      });
  var setSelectedValue = match[1];
  var selectedValue = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Radio Button Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "small",
                                      size: "sm",
                                      children: "Small Radio Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "medium",
                                      size: "md",
                                      children: "Medium Radio Button"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Subtext",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Radio, {
                                    value: "subtext_example",
                                    children: "Radio with Subtext",
                                    subtext: "This is additional information about this option"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Right Slot",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Radio, {
                                    value: "right_slot",
                                    children: "Radio with Right Slot",
                                    rightSlot: Caml_option.some(JsxRuntime.jsx(DesignSystem.Tag, {
                                              variant: "attentive",
                                              color: "primary",
                                              label: "New"
                                            }))
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "enabled",
                                      children: "Enabled Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "checked",
                                      checked: true,
                                      children: "Checked Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "disabled",
                                      isDisabled: true,
                                      children: "Disabled Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "disabled_checked",
                                      checked: true,
                                      isDisabled: true,
                                      children: "Disabled and Checked"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Group (Uncontrolled)",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Select an option",
                              name: "uncontrolled-group",
                              defaultValue: "option1",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  })
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Group (Controlled)",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Select an option",
                              name: "controlled-group",
                              value: selectedValue,
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  }),
                              onChange: (function (data) {
                                  setSelectedValue(function (param) {
                                        return data.value;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Selected value: " + selectedValue,
                              className: "mt-2"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Disabled Radio Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Disabled group",
                              name: "disabled-group",
                              defaultValue: "option1",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  }),
                              isDisabled: true
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Custom Validation",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Choose a valid option",
                              name: "validation-group",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "valid",
                                            children: "Valid Option",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "green"
                                                    }))
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "invalid",
                                            children: "Invalid Option",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "red"
                                                    }))
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "warning",
                                            children: "Warning Option",
                                            subtext: "This option requires additional verification",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "orange"
                                                    }))
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  })
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$SwitchDemo(props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsChecked = match[1];
  var isChecked = match[0];
  var match$1 = React.useState(function () {
        return ["option1"];
      });
  var setGroupValues = match$1[1];
  var groupValues = match$1[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Switch Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic Switch",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      checked: isChecked,
                                      onCheckedChange: (function (checked) {
                                          setIsChecked(function (param) {
                                                return checked;
                                              });
                                        }),
                                      label: "Toggle me"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Current state: " + (
                                        isChecked ? "On" : "Off"
                                      ),
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      size: "sm",
                                      label: "Small Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      size: "md",
                                      label: "Medium Switch"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      label: "Enabled Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      checked: true,
                                      label: "Checked Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      disabled: true,
                                      label: "Disabled Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      checked: true,
                                      disabled: true,
                                      label: "Disabled and Checked Switch"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch with Subtext",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Switch, {
                                    label: "Switch with Subtext",
                                    subtext: "Additional information about this switch option"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch with Right Slot",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Switch, {
                                    label: "Switch with Icon",
                                    rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                              size: 16,
                                              color: "green"
                                            }))
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.SwitchGroup, {
                              label: "Select multiple options",
                              name: "options",
                              value: groupValues,
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option1",
                                            label: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option2",
                                            label: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option3",
                                            label: "Option 3",
                                            subtext: "With additional description"
                                          })
                                    ],
                                    className: "flex flex-col gap-3"
                                  }),
                              onChange: (function (data) {
                                  setGroupValues(function (param) {
                                        return data.values;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Selected values: " + groupValues.join(", "),
                              className: "mt-2 text-sm text-gray-600"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Disabled Switch Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.SwitchGroup, {
                              label: "Disabled options group",
                              name: "disabled-options",
                              defaultValue: ["option1"],
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option1",
                                            label: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option2",
                                            label: "Option 2"
                                          })
                                    ],
                                    className: "flex flex-col gap-3"
                                  }),
                              isDisabled: true
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$DateRangePickerDemo(props) {
  var today = new Date();
  var future = new Date();
  future.setDate(future.getDate() + 7.0);
  var match = React.useState(function () {
        return {
                startDate: today,
                endDate: future
              };
      });
  var setDateRange = match[1];
  var dateRange = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "DateRangePicker Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic DateRangePicker",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                      value: dateRange,
                                      onChange: (function (range) {
                                          setDateRange(function (param) {
                                                return range;
                                              });
                                        }),
                                      placeholder: "Select date range"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Selected range: " + dateRange.startDate.toLocaleDateString() + " - " + dateRange.endDate.toLocaleDateString(),
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "DateRangePicker Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Primary Variant",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                              variant: "primary",
                                              placeholder: "Primary variant"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Secondary Variant",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                              variant: "secondary",
                                              placeholder: "Secondary variant"
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "DateRangePicker with Time Picker",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    showTimePicker: true,
                                    placeholder: "Select date and time range"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "DateRangePicker with Presets",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    showPresets: true,
                                    placeholder: "Select from presets"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Disabled DateRangePicker",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    placeholder: "Disabled picker",
                                    isDisabled: true
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "DateRangePicker with Custom Icon",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    placeholder: "Custom calendar icon",
                                    icon: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                              size: 16
                                            }))
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "DateRangePicker with Date Constraints",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Disable Future Dates",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                              placeholder: "No future dates",
                                              disableFutureDates: true
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Disable Past Dates",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                              placeholder: "No past dates",
                                              disablePastDates: true
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("div", {
                                              children: "Min/Max Date Range",
                                              className: "mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                              placeholder: "Limited to 2023",
                                              minDate: Caml_option.some(new Date(2023.0, 0.0, 1.0)),
                                              maxDate: Caml_option.some(new Date(2023.0, 11.0, 31.0))
                                            })
                                      ]
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Single Date Selection",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    placeholder: "Select one date",
                                    allowSingleDateSelection: true
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Custom Format",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.DateRangePicker, {
                                    placeholder: "MM/DD/YYYY format",
                                    dateFormat: "MM/dd/yyyy"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$TabInterface(props) {
  var match = React.useState(function () {
        return "Buttons";
      });
  var setActiveTab = match[1];
  var activeTab = match[0];
  var getTabClass = function (tab) {
    var baseClass = "px-4 py-2 font-medium rounded-t-lg transition-colors duration-200";
    var activeClass = baseClass + " bg-blue-500 text-white";
    var inactiveClass = baseClass + " bg-gray-200 text-gray-700 hover:bg-gray-300";
    if (activeTab === tab) {
      return activeClass;
    } else {
      return inactiveClass;
    }
  };
  var tmp;
  switch (activeTab) {
    case "Buttons" :
        tmp = JsxRuntime.jsx(App$ButtonDemo, {});
        break;
    case "Tags" :
        tmp = JsxRuntime.jsx(App$TagDemo, {});
        break;
    case "Snackbars" :
        tmp = JsxRuntime.jsx(App$SnackbarDemo, {});
        break;
    case "Tooltips" :
        tmp = JsxRuntime.jsx(App$TooltipDemo, {});
        break;
    case "TabsComponent" :
        tmp = JsxRuntime.jsx(App$TabsPreviewDemo, {});
        break;
    case "Alerts" :
        tmp = JsxRuntime.jsx(App$AlertDemo, {});
        break;
    case "Breadcrumb" :
        tmp = JsxRuntime.jsx(App$BreadcrumbDemo, {});
        break;
    case "ButtonGroup" :
        tmp = JsxRuntime.jsx(App$ButtonGroupDemo, {});
        break;
    case "Avatar" :
        tmp = JsxRuntime.jsx(App$AvatarDemo, {});
        break;
    case "AvatarGroup" :
        tmp = JsxRuntime.jsx(App$AvatarGroupDemo, {});
        break;
    case "Radio" :
        tmp = JsxRuntime.jsx(App$RadioDemo, {});
        break;
    case "Switch" :
        tmp = JsxRuntime.jsx(App$SwitchDemo, {});
        break;
    case "DateRangePicker" :
        tmp = JsxRuntime.jsx(App$DateRangePickerDemo, {});
        break;
    
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("button", {
                              children: "Buttons",
                              className: getTabClass("Buttons"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Buttons";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tags",
                              className: getTabClass("Tags"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Tags";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Snackbars",
                              className: getTabClass("Snackbars"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Snackbars";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tooltips",
                              className: getTabClass("Tooltips"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Tooltips";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tabs",
                              className: getTabClass("TabsComponent"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "TabsComponent";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Alerts",
                              className: getTabClass("Alerts"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Alerts";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Breadcrumb",
                              className: getTabClass("Breadcrumb"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Breadcrumb";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "ButtonGroup",
                              className: getTabClass("ButtonGroup"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "ButtonGroup";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Avatar",
                              className: getTabClass("Avatar"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Avatar";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "AvatarGroup",
                              className: getTabClass("AvatarGroup"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "AvatarGroup";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Radio",
                              className: getTabClass("Radio"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Radio";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Switch",
                              className: getTabClass("Switch"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Switch";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "DateRangePicker",
                              className: getTabClass("DateRangePicker"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "DateRangePicker";
                                      });
                                })
                            })
                      ],
                      className: "flex border-b border-gray-200 mb-6"
                    }),
                JsxRuntime.jsx("div", {
                      children: tmp,
                      className: "tab-content"
                    })
              ]
            });
}

function tooltipExample() {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h2", {
                      children: "Tooltip Component Example"
                    }),
                JsxRuntime.jsx("div", {
                      style: {
                        display: "flex",
                        marginTop: "20px",
                        gap: "20px"
                      }
                    })
              ],
              className: "tooltip-example",
              style: {
                margin: "20px",
                padding: "20px"
              }
            });
}

function App(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Design System Components",
                      className: "text-3xl font-bold mb-8 text-center"
                    }),
                JsxRuntime.jsx(App$TabInterface, {}),
                JsxRuntime.jsx("h2", {
                      children: "Design System Tabs Example",
                      className: "text-2xl font-bold mb-4 mt-12"
                    }),
                JsxRuntime.jsxs(DesignSystem.Tabs, {
                      defaultValue: "tab1",
                      className: "tabs-root",
                      children: [
                        JsxRuntime.jsxs(DesignSystem.TabsList, {
                              className: "tabs-list",
                              children: [
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab1",
                                      className: "tabs-trigger",
                                      children: "Features"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab2",
                                      className: "tabs-trigger",
                                      children: "Specifications"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab3",
                                      className: "tabs-trigger",
                                      children: "Reviews"
                                    })
                              ]
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab1",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "Key Features",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsxs("ul", {
                                            children: [
                                              JsxRuntime.jsx("li", {
                                                    children: "Fully accessible tabs component"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Keyboard navigation support"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Customizable styling"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Smooth transitions between tabs"
                                                  })
                                            ],
                                            className: "list-disc pl-5 space-y-2"
                                          })
                                    ]
                                  })
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab2",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "Technical Specifications",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsx("table", {
                                            children: JsxRuntime.jsxs("tbody", {
                                                  children: [
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Component",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Design System Tabs",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        }),
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Language",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "ReScript",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        }),
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Styling",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Design System CSS",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        })
                                                  ]
                                                }),
                                            className: "w-full border-collapse"
                                          })
                                    ]
                                  })
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab3",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "User Reviews",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsxs("div", {
                                                    children: [
                                                      JsxRuntime.jsxs("div", {
                                                            children: [
                                                              JsxRuntime.jsx("div", {
                                                                    children: "John Doe",
                                                                    className: "font-medium"
                                                                  }),
                                                              JsxRuntime.jsx("div", {
                                                                    children: "★★★★★",
                                                                    className: "ml-auto text-yellow-500"
                                                                  })
                                                            ],
                                                            className: "flex items-center mb-2"
                                                          }),
                                                      JsxRuntime.jsx("p", {
                                                            children: "This tabs component is amazing! Very easy to use and customize.",
                                                            className: "text-gray-700"
                                                          })
                                                    ],
                                                    className: "p-3 bg-gray-50 rounded-lg"
                                                  }),
                                              JsxRuntime.jsxs("div", {
                                                    children: [
                                                      JsxRuntime.jsxs("div", {
                                                            children: [
                                                              JsxRuntime.jsx("div", {
                                                                    children: "Jane Smith",
                                                                    className: "font-medium"
                                                                  }),
                                                              JsxRuntime.jsx("div", {
                                                                    children: "★★★★☆",
                                                                    className: "ml-auto text-yellow-500"
                                                                  })
                                                            ],
                                                            className: "flex items-center mb-2"
                                                          }),
                                                      JsxRuntime.jsx("p", {
                                                            children: "Great component with good accessibility features.",
                                                            className: "text-gray-700"
                                                          })
                                                    ],
                                                    className: "p-3 bg-gray-50 rounded-lg"
                                                  })
                                            ],
                                            className: "space-y-4"
                                          })
                                    ]
                                  })
                            })
                      ]
                    }),
                tooltipExample()
              ],
              className: "p-6"
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
