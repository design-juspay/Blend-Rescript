// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function App$ButtonDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Button Variants Demo",
                      className: "text-2xl font-bold mb-6"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Typesss",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      onClick: (function (param) {
                                          console.log("Primary clicked");
                                        }),
                                      text: "Primary Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          console.log("Secondary clicked");
                                        }),
                                      text: "Secondary Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "danger",
                                      onClick: (function (param) {
                                          console.log("Danger clicked");
                                        }),
                                      text: "Danger Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "success",
                                      onClick: (function (param) {
                                          console.log("Success clicked");
                                        }),
                                      text: "Success Button"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "sm",
                                      text: "Small Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "md",
                                      text: "Medium Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      size: "lg",
                                      text: "Large Button"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Enabled Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      isDisabled: true,
                                      text: "Disabled Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Loading",
                                      isLoading: true
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button Subtypes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Default Button",
                                      subType: "default"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Link Button",
                                      subType: "link"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      subType: "iconOnly",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ThumbsUp, {
                                                size: 18
                                              })),
                                      ariaLabel: "Icon only button"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Buttons with Icons",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Left Icon",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronLeft, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Right Icon",
                                      rightIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronRight, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Both Icons",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronLeft, {
                                                size: 18
                                              })),
                                      rightIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.ChevronRight, {
                                                size: 18
                                              }))
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Icon Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      text: "Download",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Download, {
                                                size: 18
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      text: "Mail",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Mail, {
                                                size: 18,
                                                color: "#666"
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "success",
                                      subType: "iconOnly",
                                      leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 18
                                              })),
                                      ariaLabel: "Success"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Full Width Button",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.Button, {
                              buttonType: "primary",
                              text: "Full Width Button",
                              fullWidth: true
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Button with Children",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.Button, {
                              buttonType: "success",
                              children: Caml_option.some(JsxRuntime.jsxs("div", {
                                        children: [
                                          JsxRuntime.jsx(LucideReact.Check, {
                                                size: 18,
                                                className: "mr-2"
                                              }),
                                          JsxRuntime.jsx("span", {
                                                children: "Custom Content"
                                              })
                                        ],
                                        className: "flex items-center"
                                      }))
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$TagDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tag Variants Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "noFill",
                                      label: "No Fill"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      label: "Attentive"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "subtle",
                                      label: "Subtle"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Styles",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      tagStyle: "rounded",
                                      color: "purple",
                                      label: "Vinit OG"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      tagStyle: "rounded",
                                      label: "Rounded"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "xs",
                                      label: "Extra Small"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "sm",
                                      label: "Small"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "md",
                                      label: "Medium"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      size: "lg",
                                      label: "Large"
                                    })
                              ],
                              className: "flex flex-wrap items-center gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tag Colors",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "neutral",
                                      label: "Neutral"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "primary",
                                      label: "Primary"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "success",
                                      label: "Success"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "error",
                                      label: "Error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "warning",
                                      label: "Warning"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      color: "purple",
                                      label: "Purple"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Tags with Slots",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Leading Icon",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Trailing Icon"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      label: "Both Slots",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Split Tags",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      leftLabel: "Left",
                                      rightLabel: "Right"
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      leftLabel: "With",
                                      rightLabel: "Icons",
                                      leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 14
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      color: "success",
                                      leftLabel: "Success",
                                      rightLabel: "Tag"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Combined Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "attentive",
                                      tagStyle: "rounded",
                                      size: "lg",
                                      color: "success",
                                      label: "Combined",
                                      leadingSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                size: 16
                                              }))
                                    }),
                                JsxRuntime.jsx(DesignSystem.Tag, {
                                      variant: "subtle",
                                      size: "sm",
                                      color: "error",
                                      label: "Error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.SplitTag, {
                                      tagStyle: "rounded",
                                      size: "md",
                                      color: "primary",
                                      leftLabel: "Split",
                                      rightLabel: "Tag"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

function App$SnackbarDemo(props) {
  var match = React.useState(function () {
        return false;
      });
  var setShowSnackbar = match[1];
  var match$1 = React.useState(function () {
        return "success";
      });
  var setSnackbarVariant = match$1[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Snackbar Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Snackbar Variants",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "primary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "success";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Success Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "danger",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "error";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Error Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "info";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Info Snackbar"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Button, {
                                      buttonType: "secondary",
                                      onClick: (function (param) {
                                          setSnackbarVariant(function (param) {
                                                return "warning";
                                              });
                                          setShowSnackbar(function (param) {
                                                return true;
                                              });
                                        }),
                                      text: "Show Warning Snackbar"
                                    })
                              ],
                              className: "flex flex-wrap gap-3"
                            })
                      ],
                      className: "mb-8"
                    }),
                match[0] ? JsxRuntime.jsx(DesignSystem.Snackbar, {
                        type_: match$1[0],
                        heading: "Snackbar Heading",
                        message: "This is a detailed message explaining what happened",
                        alertMessage: "Optional alert message for additional context",
                        showIcon: true,
                        autoClose: true,
                        position: "topLeft",
                        onClose: (function () {
                            setShowSnackbar(function (param) {
                                  return false;
                                });
                          })
                      }) : null
              ]
            });
}

function App$TooltipDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tooltip Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsx(DesignSystem.Tooltip, {
                      children: JsxRuntime.jsx("button", {
                            children: "Hover me"
                          }),
                      content: "This is a basic tooltip"
                    })
              ]
            });
}

function App$TabsPreviewDemo(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Tabs Variants Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Boxed Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "boxed",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "boxed",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "boxed",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "boxed",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "boxed",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Floating Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "floating",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "floating",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "floating",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "floating",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "floating",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Underline Variant",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs(DesignSystem.Tabs, {
                              defaultValue: "tab1",
                              variant: "underline",
                              children: [
                                JsxRuntime.jsxs(DesignSystem.TabsList, {
                                      variant: "underline",
                                      children: [
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab1",
                                              variant: "underline",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                                                        size: 16
                                                      })),
                                              children: "Home"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab2",
                                              variant: "underline",
                                              leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                        size: 16
                                                      })),
                                              children: "Account"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                              value: "tab3",
                                              variant: "underline",
                                              rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                                                        size: 16
                                                      })),
                                              children: "Settings"
                                            })
                                      ]
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab1",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Home Dashboard",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Welcome to your dashboard.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab2",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "Account Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Manage your account preferences here.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsContent, {
                                      value: "tab3",
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("h3", {
                                                    children: "General Settings",
                                                    className: "text-lg font-semibold"
                                                  }),
                                              JsxRuntime.jsx("p", {
                                                    children: "Configure your application preferences.",
                                                    className: "text-gray-600 mt-2"
                                                  })
                                            ],
                                            className: "p-4 rounded-md border border-gray-200 mt-4"
                                          })
                                    })
                              ]
                            })
                      ],
                      className: "mb-10"
                    })
              ]
            });
}

function App$TabInterface(props) {
  var match = React.useState(function () {
        return "Buttons";
      });
  var setActiveTab = match[1];
  var activeTab = match[0];
  var getTabClass = function (tab) {
    var baseClass = "px-4 py-2 font-medium rounded-t-lg transition-colors duration-200";
    var activeClass = baseClass + " bg-blue-500 text-white";
    var inactiveClass = baseClass + " bg-gray-200 text-gray-700 hover:bg-gray-300";
    if (activeTab === tab) {
      return activeClass;
    } else {
      return inactiveClass;
    }
  };
  var tmp;
  switch (activeTab) {
    case "Buttons" :
        tmp = JsxRuntime.jsx(App$ButtonDemo, {});
        break;
    case "Tags" :
        tmp = JsxRuntime.jsx(App$TagDemo, {});
        break;
    case "Snackbars" :
        tmp = JsxRuntime.jsx(App$SnackbarDemo, {});
        break;
    case "Tooltips" :
        tmp = JsxRuntime.jsx(App$TooltipDemo, {});
        break;
    case "TabsComponent" :
        tmp = JsxRuntime.jsx(App$TabsPreviewDemo, {});
        break;
    
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("button", {
                              children: "Buttons",
                              className: getTabClass("Buttons"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Buttons";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tags",
                              className: getTabClass("Tags"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Tags";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Snackbars",
                              className: getTabClass("Snackbars"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Snackbars";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tooltips",
                              className: getTabClass("Tooltips"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "Tooltips";
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Tabs",
                              className: getTabClass("TabsComponent"),
                              onClick: (function (param) {
                                  setActiveTab(function (param) {
                                        return "TabsComponent";
                                      });
                                })
                            })
                      ],
                      className: "flex border-b border-gray-200 mb-6"
                    }),
                JsxRuntime.jsx("div", {
                      children: tmp,
                      className: "tab-content"
                    })
              ]
            });
}

function tooltipExample() {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h2", {
                      children: "Tooltip Component Example"
                    }),
                JsxRuntime.jsx("div", {
                      style: {
                        display: "flex",
                        marginTop: "20px",
                        gap: "20px"
                      }
                    })
              ],
              className: "tooltip-example",
              style: {
                margin: "20px",
                padding: "20px"
              }
            });
}

function App(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Design System Components",
                      className: "text-3xl font-bold mb-8 text-center"
                    }),
                JsxRuntime.jsx(App$TabInterface, {}),
                JsxRuntime.jsx("h2", {
                      children: "Design System Tabs Example",
                      className: "text-2xl font-bold mb-4 mt-12"
                    }),
                JsxRuntime.jsxs(DesignSystem.Tabs, {
                      defaultValue: "tab1",
                      className: "tabs-root",
                      children: [
                        JsxRuntime.jsxs(DesignSystem.TabsList, {
                              className: "tabs-list",
                              children: [
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab1",
                                      className: "tabs-trigger",
                                      children: "Features"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab2",
                                      className: "tabs-trigger",
                                      children: "Specifications"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TabsTrigger, {
                                      value: "tab3",
                                      className: "tabs-trigger",
                                      children: "Reviews"
                                    })
                              ]
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab1",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "Key Features",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsxs("ul", {
                                            children: [
                                              JsxRuntime.jsx("li", {
                                                    children: "Fully accessible tabs component"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Keyboard navigation support"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Customizable styling"
                                                  }),
                                              JsxRuntime.jsx("li", {
                                                    children: "Smooth transitions between tabs"
                                                  })
                                            ],
                                            className: "list-disc pl-5 space-y-2"
                                          })
                                    ]
                                  })
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab2",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "Technical Specifications",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsx("table", {
                                            children: JsxRuntime.jsxs("tbody", {
                                                  children: [
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Component",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Design System Tabs",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        }),
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Language",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "ReScript",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        }),
                                                    JsxRuntime.jsxs("tr", {
                                                          children: [
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Styling",
                                                                  className: "py-2 font-medium"
                                                                }),
                                                            JsxRuntime.jsx("td", {
                                                                  children: "Design System CSS",
                                                                  className: "py-2"
                                                                })
                                                          ],
                                                          className: "border-b"
                                                        })
                                                  ]
                                                }),
                                            className: "w-full border-collapse"
                                          })
                                    ]
                                  })
                            }),
                        JsxRuntime.jsx(DesignSystem.TabsContent, {
                              value: "tab3",
                              className: "tabs-content",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "User Reviews",
                                            className: "text-xl font-semibold mb-3"
                                          }),
                                      JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsxs("div", {
                                                    children: [
                                                      JsxRuntime.jsxs("div", {
                                                            children: [
                                                              JsxRuntime.jsx("div", {
                                                                    children: "John Doe",
                                                                    className: "font-medium"
                                                                  }),
                                                              JsxRuntime.jsx("div", {
                                                                    children: "★★★★★",
                                                                    className: "ml-auto text-yellow-500"
                                                                  })
                                                            ],
                                                            className: "flex items-center mb-2"
                                                          }),
                                                      JsxRuntime.jsx("p", {
                                                            children: "This tabs component is amazing! Very easy to use and customize.",
                                                            className: "text-gray-700"
                                                          })
                                                    ],
                                                    className: "p-3 bg-gray-50 rounded-lg"
                                                  }),
                                              JsxRuntime.jsxs("div", {
                                                    children: [
                                                      JsxRuntime.jsxs("div", {
                                                            children: [
                                                              JsxRuntime.jsx("div", {
                                                                    children: "Jane Smith",
                                                                    className: "font-medium"
                                                                  }),
                                                              JsxRuntime.jsx("div", {
                                                                    children: "★★★★☆",
                                                                    className: "ml-auto text-yellow-500"
                                                                  })
                                                            ],
                                                            className: "flex items-center mb-2"
                                                          }),
                                                      JsxRuntime.jsx("p", {
                                                            children: "Great component with good accessibility features.",
                                                            className: "text-gray-700"
                                                          })
                                                    ],
                                                    className: "p-3 bg-gray-50 rounded-lg"
                                                  })
                                            ],
                                            className: "space-y-4"
                                          })
                                    ]
                                  })
                            })
                      ]
                    }),
                tooltipExample()
              ],
              className: "p-6"
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
