// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function RadioDemo$RadioDemo(props) {
  var match = React.useState(function () {
        return "option1";
      });
  var setSelectedValue = match[1];
  var selectedValue = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Radio Button Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "small",
                                      size: "sm",
                                      children: "Small Radio Button"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "medium",
                                      size: "md",
                                      children: "Medium Radio Button"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Subtext",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Radio, {
                                    value: "subtext_example",
                                    children: "Radio with Subtext",
                                    subtext: "This is additional information about this option"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Right Slot",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Radio, {
                                    value: "right_slot",
                                    children: "Radio with Right Slot",
                                    rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Tag, {}))
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "enabled",
                                      children: "Enabled Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "checked",
                                      isChecked: true,
                                      children: "Checked Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "disabled",
                                      isDisabled: true,
                                      children: "Disabled Radio"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Radio, {
                                      value: "disabled_checked",
                                      isChecked: true,
                                      isDisabled: true,
                                      children: "Disabled and Checked"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Group (Uncontrolled)",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Select an option",
                              name: "uncontrolled-group",
                              defaultValue: "option1",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  })
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio Group (Controlled)",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Select an option",
                              name: "controlled-group",
                              value: selectedValue,
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  }),
                              onChange: (function (data) {
                                  setSelectedValue(function (param) {
                                        return data.value;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Selected value: " + selectedValue,
                              className: "mt-2"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Disabled Radio Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Disabled group",
                              name: "disabled-group",
                              defaultValue: "option1",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option1",
                                            children: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option2",
                                            children: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "option3",
                                            children: "Option 3"
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  }),
                              isDisabled: true
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Radio with Custom Validation",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.RadioGroup, {
                              label: "Choose a valid option",
                              name: "validation-group",
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "valid",
                                            children: "Valid Option",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "green"
                                                    }))
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "invalid",
                                            children: "Invalid Option",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "red"
                                                    }))
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Radio, {
                                            value: "warning",
                                            children: "Warning Option",
                                            subtext: "This option requires additional verification",
                                            rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                                      size: 16,
                                                      color: "orange"
                                                    }))
                                          })
                                    ],
                                    className: "flex flex-col gap-2"
                                  })
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

var RadioDemo = {
  make: RadioDemo$RadioDemo
};

export {
  RadioDemo ,
}
/* react Not a pure module */
