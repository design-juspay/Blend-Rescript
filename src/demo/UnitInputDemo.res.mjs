// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function UnitInputDemo$UnitInputDemo(props) {
  var match = React.useState(function () {
        return "";
      });
  var setCurrencyValue = match[1];
  var currencyValue = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setPercentValue = match$1[1];
  var percentValue = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setMeasurementValue = match$2[1];
  var measurementValue = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setWeightValue = match$3[1];
  var weightValue = match$3[0];
  var handleCurrencyChange = function (e) {
    var value = e.target.value;
    setCurrencyValue(function (param) {
          return value;
        });
    console.log("Currency value changed: " + value);
  };
  var handlePercentChange = function (e) {
    var value = e.target.value;
    setPercentValue(function (param) {
          return value;
        });
    console.log("Percent value changed: " + value);
  };
  var handleMeasurementChange = function (e) {
    var value = e.target.value;
    setMeasurementValue(function (param) {
          return value;
        });
    console.log("Measurement value changed: " + value);
  };
  var handleWeightChange = function (e) {
    var value = e.target.value;
    setWeightValue(function (param) {
          return value;
        });
    console.log("Weight value changed: " + value);
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "UnitInput Components",
                      className: "text-2xl font-bold"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic UnitInput Examples",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Currency Input (Prefix)",
                                      placeholder: "Enter amount",
                                      unitPosition: "prefix",
                                      unitText: "â‚¹",
                                      value: currencyValue,
                                      onChange: handleCurrencyChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Percentage Input (Suffix)",
                                      placeholder: "Enter percentage",
                                      unitPosition: "suffix",
                                      unitText: "%",
                                      value: percentValue,
                                      onChange: handlePercentChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Measurement Input (Suffix)",
                                      placeholder: "Enter length",
                                      unitPosition: "suffix",
                                      unitText: "cm",
                                      value: measurementValue,
                                      onChange: handleMeasurementChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Weight Input (Suffix)",
                                      placeholder: "Enter weight",
                                      unitPosition: "suffix",
                                      unitText: "kg",
                                      value: weightValue,
                                      onChange: handleWeightChange,
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "UnitInput States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Default State",
                                      placeholder: "Default state",
                                      state: "default",
                                      unitPosition: "prefix",
                                      unitText: "$"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Hover State",
                                      placeholder: "Hover state",
                                      state: "hover",
                                      unitPosition: "prefix",
                                      unitText: "$"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Focused State",
                                      placeholder: "Focused state",
                                      state: "focused",
                                      unitPosition: "prefix",
                                      unitText: "$"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Filled State",
                                      placeholder: "Filled state",
                                      state: "filled",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      value: "100"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Error State",
                                      placeholder: "Error state",
                                      state: "error",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      errorMessage: "This field has an error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Success State",
                                      placeholder: "Success state",
                                      state: "success",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      value: "100",
                                      successMessage: "This field is valid"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Disabled State",
                                      placeholder: "Disabled state",
                                      state: "disabled",
                                      unitPosition: "prefix",
                                      unitText: "$"
                                    })
                              ],
                              className: "grid grid-cols-1 md:grid-cols-2 gap-4"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "UnitInput with Different Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Small Size",
                                      placeholder: "Small input",
                                      size: "md",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Medium Size",
                                      placeholder: "Medium input",
                                      size: "md",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Large Size",
                                      placeholder: "Large input",
                                      size: "lg",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "UnitInput with Additional Elements",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "With Sublabel",
                                      placeholder: "Enter value",
                                      sublabel: "Additional information about this field",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      hintText: "This is a hint to help you fill this field",
                                      label: "With Hint",
                                      placeholder: "Enter value",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "Mandatory Field",
                                      mandatory: true,
                                      placeholder: "This field is required",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                      label: "With Info Tooltip",
                                      placeholder: "Hover over the info icon",
                                      unitPosition: "prefix",
                                      unitText: "$",
                                      infoTooltip: "This tooltip provides additional information about the field",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "UnitInput Use Cases",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("h3", {
                                              children: "Price Input",
                                              className: "text-lg font-medium mb-2"
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                                      label: "Price (USD)",
                                                      placeholder: "Enter price",
                                                      state: currencyValue.length > 0 ? "filled" : "default",
                                                      unitPosition: "prefix",
                                                      unitText: "$",
                                                      value: currencyValue,
                                                      onChange: handleCurrencyChange,
                                                      className: "w-full"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                                      label: "Discount",
                                                      placeholder: "Enter discount",
                                                      state: percentValue.length > 0 ? "filled" : "default",
                                                      unitPosition: "suffix",
                                                      unitText: "%",
                                                      value: percentValue,
                                                      onChange: handlePercentChange,
                                                      className: "w-full"
                                                    })
                                              ],
                                              className: "grid grid-cols-2 gap-4"
                                            }),
                                        JsxRuntime.jsx("div", {
                                              children: JsxRuntime.jsx("button", {
                                                    children: "Save Price Information",
                                                    className: "px-4 py-2 rounded-md text-white font-medium " + (
                                                      currencyValue.length > 0 && percentValue.length > 0 ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-300 cursor-not-allowed"
                                                    ),
                                                    disabled: currencyValue.length === 0 || percentValue.length === 0,
                                                    onClick: (function (param) {
                                                        console.log("Saving price information...");
                                                      })
                                                  }),
                                              className: "mt-4"
                                            })
                                      ],
                                      className: "border p-4 rounded-lg bg-gray-50"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("h3", {
                                              children: "Product Dimensions",
                                              className: "text-lg font-medium mb-2"
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                                      label: "Length",
                                                      placeholder: "Enter length",
                                                      unitPosition: "suffix",
                                                      unitText: "cm",
                                                      value: measurementValue,
                                                      onChange: handleMeasurementChange,
                                                      className: "w-full"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.UnitInput, {
                                                      label: "Weight",
                                                      placeholder: "Enter weight",
                                                      unitPosition: "suffix",
                                                      unitText: "kg",
                                                      value: weightValue,
                                                      onChange: handleWeightChange,
                                                      className: "w-full"
                                                    })
                                              ],
                                              className: "grid grid-cols-2 gap-4"
                                            }),
                                        JsxRuntime.jsx("div", {
                                              children: JsxRuntime.jsx("button", {
                                                    children: "Save Dimensions",
                                                    className: "px-4 py-2 rounded-md text-white font-medium " + (
                                                      measurementValue.length > 0 && weightValue.length > 0 ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-300 cursor-not-allowed"
                                                    ),
                                                    disabled: measurementValue.length === 0 || weightValue.length === 0,
                                                    onClick: (function (param) {
                                                        console.log("Saving product dimensions...");
                                                      })
                                                  }),
                                              className: "mt-4"
                                            })
                                      ],
                                      className: "border p-4 rounded-lg bg-gray-50"
                                    })
                              ],
                              className: "space-y-6"
                            })
                      ],
                      className: "border rounded p-4"
                    })
              ],
              className: "p-4 space-y-8"
            });
}

var UnitInputDemo = {
  make: UnitInputDemo$UnitInputDemo
};

var $$default = UnitInputDemo$UnitInputDemo;

export {
  UnitInputDemo ,
  $$default as default,
}
/* react Not a pure module */
