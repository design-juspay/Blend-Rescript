// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function createSeparator(idOpt) {
  var id = idOpt !== undefined ? idOpt : "separator";
  return {
          id: id,
          text: "",
          className: "py-0 my-1 border-b border-gray-200",
          type_: "SEPARATOR"
        };
}

var Dropdown = {};

function MenuDropdownDemo(props) {
  var match = React.useState(function () {
        return [];
      });
  var setSelectedItems = match[1];
  var selectedItems = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setIsOpen = match$1[1];
  React.useEffect((function () {
          console.log("Selected items updated: ");
          console.log(selectedItems);
          console.log("Count: " + String(selectedItems.length));
        }), [selectedItems]);
  var basicMenuItems = [
    {
      id: "item1",
      text: "Home",
      onClick: (function () {
          console.log("Home clicked");
        })
    },
    {
      id: "item2",
      text: "Profile",
      onClick: (function () {
          console.log("Profile clicked");
        })
    },
    {
      id: "item3",
      text: "Settings",
      onClick: (function () {
          console.log("Settings clicked");
        })
    },
    createSeparator("separator1"),
    {
      id: "item4",
      text: "Logout",
      action: "DANGER",
      onClick: (function () {
          console.log("Logout clicked");
        })
    }
  ];
  var menuItemsWithIcons = [
    {
      id: "home",
      text: "Home",
      onClick: (function () {
          console.log("Home clicked");
        }),
      hasSlotL: true,
      slotL: Caml_option.some(JsxRuntime.jsx(LucideReact.Home, {
                size: 16
              }))
    },
    {
      id: "profile",
      text: "Profile",
      onClick: (function () {
          console.log("Profile clicked");
        }),
      hasSlotL: true,
      slotL: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                size: 16
              }))
    },
    {
      id: "settings",
      text: "Settings",
      onClick: (function () {
          console.log("Settings clicked");
        }),
      hasSlotL: true,
      slotL: Caml_option.some(JsxRuntime.jsx(LucideReact.Settings, {
                size: 16
              }))
    },
    createSeparator("separator2"),
    {
      id: "logout",
      text: "Logout",
      action: "DANGER",
      onClick: (function () {
          console.log("Logout clicked");
        }),
      hasSlotL: true,
      slotL: Caml_option.some(JsxRuntime.jsx(LucideReact.LogOut, {
                size: 16
              }))
    }
  ];
  var handleMultiSelectItemClick = function (itemId) {
    setSelectedItems(function (prev) {
          var isSelected = Belt_Array.some(prev, (function (id) {
                  return id === itemId;
                }));
          if (isSelected) {
            return Belt_Array.keep(prev, (function (id) {
                          return id !== itemId;
                        }));
          } else {
            return Belt_Array.concat(prev, [itemId]);
          }
        });
    console.log("Multi-select item toggled: " + itemId);
  };
  var multiSelectMenuItems = [
    {
      id: "option1",
      text: "Option 1",
      type_: "MULTI_SELECT",
      onClick: (function () {
          handleMultiSelectItemClick("option1");
        }),
      hasSlotR1: true,
      slotR1: Caml_option.some(JsxRuntime.jsx(DesignSystem.Checkbox, {
                isChecked: Belt_Array.some(selectedItems, (function (id) {
                        return id === "option1";
                      })),
                size: "sm"
              })),
      isMultiSelect: true
    },
    {
      id: "option2",
      text: "Option 2",
      type_: "MULTI_SELECT",
      onClick: (function () {
          handleMultiSelectItemClick("option2");
        }),
      hasSlotR1: true,
      slotR1: Caml_option.some(JsxRuntime.jsx(DesignSystem.Checkbox, {
                isChecked: Belt_Array.some(selectedItems, (function (id) {
                        return id === "option2";
                      })),
                size: "sm"
              })),
      isMultiSelect: true
    },
    {
      id: "option3",
      text: "Option 3",
      type_: "MULTI_SELECT",
      onClick: (function () {
          handleMultiSelectItemClick("option3");
        }),
      hasSlotR1: true,
      slotR1: Caml_option.some(JsxRuntime.jsx(DesignSystem.Checkbox, {
                isChecked: Belt_Array.some(selectedItems, (function (id) {
                        return id === "option3";
                      })),
                size: "sm"
              })),
      isMultiSelect: true
    }
  ];
  var handleItemClick = function (item) {
    console.log("Item clicked:", item);
  };
  var selectedItemsStr = Belt_Array.joinWith(selectedItems, ",", (function (x) {
          return x;
        }));
  var selectedCount = selectedItems.length;
  var placeholder = "Select options";
  var tmp;
  if (selectedItems.length !== 0) {
    var firstItem = Belt_Option.getWithDefault(Belt_Array.get(selectedItems, 0), "");
    var remainingCount = selectedItems.length - 1 | 0;
    tmp = remainingCount > 0 ? placeholder + " " + firstItem + ", +" + String(remainingCount) + " more" : placeholder + " " + firstItem;
  } else {
    tmp = placeholder;
  }
  var placeholder$1 = "Text display";
  var tmp$1;
  if (selectedItems.length !== 0) {
    var firstItem$1 = Belt_Option.getWithDefault(Belt_Array.get(selectedItems, 0), "");
    var remainingCount$1 = selectedItems.length - 1 | 0;
    tmp$1 = remainingCount$1 > 0 ? placeholder$1 + " " + firstItem$1 + ", +" + String(remainingCount$1) + " more" : placeholder$1 + " " + firstItem$1;
  } else {
    tmp$1 = placeholder$1;
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "MenuDropdown Component",
                      className: "text-2xl font-bold mb-6"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("h2", {
                                      children: "Basic MenuDropdown",
                                      className: "text-xl font-semibold mb-4"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                            type_: "singleSelect",
                                            label: "Basic Dropdown",
                                            placeholder: "Select an option",
                                            menuItems: basicMenuItems,
                                            onSelect: handleItemClick
                                          }),
                                      className: "flex flex-wrap gap-4"
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("h2", {
                                      children: "Icon Button Trigger",
                                      className: "text-xl font-semibold mb-4"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                            type_: "ICON_ONLY",
                                            subType: "menuButton",
                                            hasLeftIcon: true,
                                            leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                      size: 16
                                                    })),
                                            placeholder: "",
                                            menuItems: menuItemsWithIcons,
                                            onSelect: handleItemClick
                                          }),
                                      className: "flex flex-wrap gap-4"
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("h2", {
                                      children: "Custom Trigger",
                                      className: "text-xl font-semibold mb-4"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                            type_: "singleSelect",
                                            children: Caml_option.some(JsxRuntime.jsxs("button", {
                                                      children: [
                                                        JsxRuntime.jsx("span", {
                                                              children: "Custom Trigger",
                                                              className: "mr-2"
                                                            }),
                                                        JsxRuntime.jsx(LucideReact.ChevronDown, {
                                                              size: 16
                                                            })
                                                      ],
                                                      className: "px-3 py-2 bg-purple-500 text-white rounded-lg flex items-center",
                                                      onClick: (function (param) {
                                                          setIsOpen(function (prev) {
                                                                return !prev;
                                                              });
                                                        })
                                                    })),
                                            menuItems: basicMenuItems,
                                            onSelect: handleItemClick,
                                            triggerType: "custom"
                                          }),
                                      className: "flex flex-wrap gap-4"
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("h2", {
                                      children: "Multi-select MenuDropdown",
                                      className: "text-xl font-semibold mb-4"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("h3", {
                                                      children: "Count Display (HAS_CONTAINER)",
                                                      className: "text-lg font-medium mb-2"
                                                    }),
                                                JsxRuntime.jsx("div", {
                                                      children: (console.log("Rendering Count dropdown with:"), console.log("selectedOption", selectedItemsStr), console.log("selectedCount", selectedCount), JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                              id: "multi-select-count",
                                                              type_: "MULTI_SELECT",
                                                              subType: "HAS_CONTAINER",
                                                              selectionType: "COUNT",
                                                              hasClearButton: true,
                                                              label: "Multi Select (Count)",
                                                              hint: "Select multiple options",
                                                              placeholder: "Select options",
                                                              selectedOption: selectedItemsStr,
                                                              selectedCount: selectedCount,
                                                              menuItems: multiSelectMenuItems,
                                                              onSelect: (function (item) {
                                                                  var id = item.id;
                                                                  if (id !== undefined) {
                                                                    handleMultiSelectItemClick(id);
                                                                    console.log("Selected via onSelect: " + id);
                                                                    return ;
                                                                  }
                                                                  
                                                                }),
                                                              onClear: (function () {
                                                                  setSelectedItems(function (param) {
                                                                        return [];
                                                                      });
                                                                  console.log("Selections cleared");
                                                                }),
                                                              closeOnSelect: false
                                                            })),
                                                      className: "flex flex-wrap gap-4"
                                                    })
                                              ]
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("h3", {
                                                      children: "Text Display (HAS_CONTAINER)",
                                                      className: "text-lg font-medium mb-2"
                                                    }),
                                                JsxRuntime.jsx("div", {
                                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                            id: "multi-select-text",
                                                            type_: "MULTI_SELECT",
                                                            subType: "HAS_CONTAINER",
                                                            selectionType: "TEXT",
                                                            hasClearButton: true,
                                                            label: "Multi Select (Text)",
                                                            hint: "Select multiple options",
                                                            placeholder: "Select options",
                                                            selectedOption: Belt_Array.joinWith(selectedItems, ",", (function (x) {
                                                                    return x;
                                                                  })),
                                                            selectedCount: selectedItems.length,
                                                            selectedText: tmp,
                                                            menuItems: multiSelectMenuItems,
                                                            onSelect: (function (item) {
                                                                var id = item.id;
                                                                if (id !== undefined) {
                                                                  return handleMultiSelectItemClick(id);
                                                                }
                                                                
                                                              }),
                                                            onClear: (function () {
                                                                setSelectedItems(function (param) {
                                                                      return [];
                                                                    });
                                                              }),
                                                            closeOnSelect: false
                                                          }),
                                                      className: "flex flex-wrap gap-4"
                                                    })
                                              ]
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("h3", {
                                                      children: "NO_CONTAINER Variant",
                                                      className: "text-lg font-medium mb-2"
                                                    }),
                                                JsxRuntime.jsx("div", {
                                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                            type_: "MULTI_SELECT",
                                                            subType: "NO_CONTAINER",
                                                            selectionType: "COUNT",
                                                            placeholder: "Select options",
                                                            selectedOption: Belt_Array.joinWith(selectedItems, ",", (function (x) {
                                                                    return x;
                                                                  })),
                                                            selectedCount: selectedItems.length,
                                                            menuItems: multiSelectMenuItems,
                                                            onSelect: (function (item) {
                                                                var id = item.id;
                                                                if (id !== undefined) {
                                                                  return handleMultiSelectItemClick(id);
                                                                }
                                                                
                                                              }),
                                                            closeOnSelect: false
                                                          }),
                                                      className: "flex flex-wrap gap-4"
                                                    })
                                              ]
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("h3", {
                                                      children: "NO_CONTAINER with Text Display",
                                                      className: "text-lg font-medium mb-2"
                                                    }),
                                                JsxRuntime.jsx("div", {
                                                      children: JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                            type_: "MULTI_SELECT",
                                                            subType: "NO_CONTAINER",
                                                            selectionType: "TEXT",
                                                            placeholder: "Text display",
                                                            selectedOption: Belt_Array.joinWith(selectedItems, ",", (function (x) {
                                                                    return x;
                                                                  })),
                                                            selectedCount: selectedItems.length,
                                                            selectedText: tmp$1,
                                                            menuItems: multiSelectMenuItems,
                                                            onSelect: (function (item) {
                                                                var id = item.id;
                                                                if (id !== undefined) {
                                                                  return handleMultiSelectItemClick(id);
                                                                }
                                                                
                                                              }),
                                                            closeOnSelect: false
                                                          }),
                                                      className: "flex flex-wrap gap-4"
                                                    })
                                              ]
                                            })
                                      ],
                                      className: "space-y-8"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: JsxRuntime.jsx("p", {
                                            children: selectedItems.length === 0 ? "No items selected" : "Selected items: " + Belt_Array.joinWith(selectedItems, ", ", (function (x) {
                                                      return x;
                                                    })),
                                            className: "font-medium"
                                          }),
                                      className: "mt-4"
                                    }),
                                JsxRuntime.jsx("style", {
                                      dangerouslySetInnerHTML: {
                                        __html: ""
                                      }
                                    })
                              ]
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("h2", {
                                      children: "Dropdown Sizes",
                                      className: "text-xl font-semibold mb-4"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("p", {
                                                      children: "Small (sm)",
                                                      className: "text-sm text-gray-600 mb-2"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                      size: "sm",
                                                      hasLabel: true,
                                                      label: "Small Dropdown",
                                                      placeholder: "Small",
                                                      menuItems: basicMenuItems
                                                    })
                                              ]
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("p", {
                                                      children: "Medium (md)",
                                                      className: "text-sm text-gray-600 mb-2"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                      size: "md",
                                                      hasLabel: true,
                                                      label: "Medium Dropdown",
                                                      placeholder: "Medium",
                                                      menuItems: basicMenuItems
                                                    })
                                              ]
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("p", {
                                                      children: "Large (lg)",
                                                      className: "text-sm text-gray-600 mb-2"
                                                    }),
                                                JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                      size: "lg",
                                                      hasLabel: true,
                                                      label: "Large Dropdown",
                                                      placeholder: "Large",
                                                      menuItems: basicMenuItems
                                                    })
                                              ]
                                            })
                                      ],
                                      className: "flex flex-wrap gap-6 items-end"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("h4", {
                                              children: "Icon Size Comparison",
                                              className: "text-lg font-medium mb-4"
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsxs("div", {
                                                      children: [
                                                        JsxRuntime.jsx("p", {
                                                              children: "Small (sm)",
                                                              className: "text-sm text-gray-600 mb-2"
                                                            }),
                                                        JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                              type_: "ICON_ONLY",
                                                              subType: "menuButton",
                                                              size: "sm",
                                                              hasLeftIcon: true,
                                                              leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                                        size: 16
                                                                      })),
                                                              placeholder: "",
                                                              menuItems: basicMenuItems
                                                            })
                                                      ]
                                                    }),
                                                JsxRuntime.jsxs("div", {
                                                      children: [
                                                        JsxRuntime.jsx("p", {
                                                              children: "Medium (md)",
                                                              className: "text-sm text-gray-600 mb-2"
                                                            }),
                                                        JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                              type_: "ICON_ONLY",
                                                              subType: "menuButton",
                                                              size: "md",
                                                              hasLeftIcon: true,
                                                              leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                                        size: 16
                                                                      })),
                                                              placeholder: "",
                                                              menuItems: basicMenuItems
                                                            })
                                                      ]
                                                    }),
                                                JsxRuntime.jsxs("div", {
                                                      children: [
                                                        JsxRuntime.jsx("p", {
                                                              children: "Large (lg)",
                                                              className: "text-sm text-gray-600 mb-2"
                                                            }),
                                                        JsxRuntime.jsx(DesignSystem.Dropdown, {
                                                              type_: "ICON_ONLY",
                                                              subType: "menuButton",
                                                              size: "lg",
                                                              hasLeftIcon: true,
                                                              leftIcon: Caml_option.some(JsxRuntime.jsx(LucideReact.User, {
                                                                        size: 16
                                                                      })),
                                                              placeholder: "",
                                                              menuItems: basicMenuItems
                                                            })
                                                      ]
                                                    })
                                              ],
                                              className: "flex flex-wrap gap-6 items-end"
                                            })
                                      ],
                                      className: "mt-8"
                                    })
                              ]
                            })
                      ],
                      className: "space-y-8"
                    })
              ],
              className: "space-y-10 p-6"
            });
}

var make = MenuDropdownDemo;

export {
  createSeparator ,
  Dropdown ,
  make ,
}
/* react Not a pure module */
