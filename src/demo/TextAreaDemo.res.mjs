// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function TextAreaDemo$TextAreaDemo(props) {
  var match = React.useState(function () {
        return "";
      });
  var setBasicValue = match[1];
  var basicValue = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setFeedbackValue = match$1[1];
  var feedbackValue = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setBioValue = match$2[1];
  var bioValue = match$2[0];
  var handleBasicChange = function (e) {
    var value = e.target.value;
    setBasicValue(function (param) {
          return value;
        });
    console.log("Basic TextArea value changed: " + value);
  };
  var handleFeedbackChange = function (e) {
    var value = e.target.value;
    setFeedbackValue(function (param) {
          return value;
        });
    console.log("Feedback TextArea value changed: " + value);
  };
  var handleBioChange = function (e) {
    var value = e.target.value;
    setBioValue(function (param) {
          return value;
        });
    console.log("Bio TextArea value changed: " + value);
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "TextArea Components",
                      className: "text-2xl font-bold"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic TextArea",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Basic TextArea",
                                      placeholder: "Enter multi-line text here",
                                      value: basicValue,
                                      onChange: handleBasicChange,
                                      rows: 4,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Character count: " + String(basicValue.length),
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextArea States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Default State",
                                      placeholder: "Default state",
                                      state: "default",
                                      rows: 3
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Hover State",
                                      placeholder: "Hover state",
                                      state: "hover",
                                      rows: 3
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Focused State",
                                      placeholder: "Focused state",
                                      state: "focused",
                                      rows: 3
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Filled State",
                                      placeholder: "Filled state",
                                      state: "filled",
                                      value: "This textarea is filled with some example text to demonstrate the filled state",
                                      rows: 3
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Error State",
                                      placeholder: "Error state",
                                      state: "error",
                                      rows: 3,
                                      errorMessage: "This field has an error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Success State",
                                      placeholder: "Success state",
                                      state: "success",
                                      value: "This is a valid textarea input",
                                      rows: 3,
                                      successMessage: "This field is valid"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Disabled State",
                                      placeholder: "Disabled state",
                                      state: "disabled",
                                      rows: 3
                                    })
                              ],
                              className: "grid grid-cols-1 md:grid-cols-2 gap-4"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextArea with Different Rows",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Small Height (2 rows)",
                                      placeholder: "Small height textarea",
                                      rows: 2,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Medium Height (4 rows)",
                                      placeholder: "Medium height textarea",
                                      rows: 4,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Large Height (6 rows)",
                                      placeholder: "Large height textarea",
                                      rows: 6,
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextArea with Labels",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "With Sublabel",
                                      placeholder: "With sublabel",
                                      sublabel: "Additional information about this field",
                                      rows: 4,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      hintText: "This is a hint to help you fill this field",
                                      label: "With Hint",
                                      placeholder: "With hint text",
                                      rows: 4,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "Mandatory Field",
                                      mandatory: true,
                                      placeholder: "This field is required",
                                      rows: 4,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextArea, {
                                      label: "With Info Tooltip",
                                      placeholder: "Hover over the info icon",
                                      infoTooltip: "This tooltip provides additional information about the field",
                                      rows: 4,
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextArea Use Cases",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("h3", {
                                              children: "Feedback Form",
                                              className: "text-lg font-medium mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TextArea, {
                                              label: "Share Your Feedback",
                                              placeholder: "Please share your thoughts, suggestions, or concerns about our product...",
                                              value: feedbackValue,
                                              onChange: handleFeedbackChange,
                                              rows: 5,
                                              className: "w-full mb-2"
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("div", {
                                                      children: String(feedbackValue.length) + "/500 characters",
                                                      className: "text-sm text-gray-600"
                                                    }),
                                                JsxRuntime.jsx("button", {
                                                      children: "Submit Feedback",
                                                      className: "px-4 py-2 rounded-md text-white font-medium " + (
                                                        feedbackValue.length > 0 ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-300 cursor-not-allowed"
                                                      ),
                                                      disabled: feedbackValue.length === 0,
                                                      onClick: (function (param) {
                                                          console.log("Submitting feedback...");
                                                        })
                                                    })
                                              ],
                                              className: "flex justify-between items-center"
                                            })
                                      ],
                                      className: "border p-4 rounded-lg bg-gray-50"
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("h3", {
                                              children: "User Profile Bio",
                                              className: "text-lg font-medium mb-2"
                                            }),
                                        JsxRuntime.jsx(DesignSystem.TextArea, {
                                              label: "About Me",
                                              placeholder: "Tell us about yourself...",
                                              value: bioValue,
                                              onChange: handleBioChange,
                                              rows: 4,
                                              className: "w-full mb-2"
                                            }),
                                        JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("div", {
                                                      children: String(bioValue.length) + "/250 characters",
                                                      className: "text-sm text-gray-600"
                                                    }),
                                                JsxRuntime.jsx("button", {
                                                      children: "Save Profile",
                                                      className: "px-4 py-2 rounded-md text-white font-medium " + (
                                                        bioValue.length > 0 && bioValue.length <= 250 ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-300 cursor-not-allowed"
                                                      ),
                                                      disabled: bioValue.length === 0 || bioValue.length > 250,
                                                      onClick: (function (param) {
                                                          console.log("Saving profile...");
                                                        })
                                                    })
                                              ],
                                              className: "flex justify-between items-center"
                                            }),
                                        bioValue.length > 250 ? JsxRuntime.jsx("p", {
                                                children: "Bio exceeds the maximum character limit of 250.",
                                                className: "text-sm text-red-500 mt-1"
                                              }) : null
                                      ],
                                      className: "border p-4 rounded-lg bg-gray-50"
                                    })
                              ],
                              className: "space-y-6"
                            })
                      ],
                      className: "border rounded p-4"
                    })
              ],
              className: "p-4 space-y-8"
            });
}

var TextAreaDemo = {
  make: TextAreaDemo$TextAreaDemo
};

var $$default = TextAreaDemo$TextAreaDemo;

export {
  TextAreaDemo ,
  $$default as default,
}
/* react Not a pure module */
