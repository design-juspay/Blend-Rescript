// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function TextInputDemo$TextInputDemo(props) {
  var match = React.useState(function () {
        return "";
      });
  var setInputValue = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setPasswordValue = match$1[1];
  var match$2 = React.useState(function () {
        return "";
      });
  var setNumberValue = match$2[1];
  var match$3 = React.useState(function () {
        return "";
      });
  var setEmailValue = match$3[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "TextInput Components",
                      className: "text-2xl font-bold"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic TextInput",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.TextInput, {
                                    label: "Basic Input",
                                    placeholder: "Enter some text",
                                    value: match[0],
                                    onChange: (function (e) {
                                        setInputValue(function (param) {
                                              return e.target.value;
                                            });
                                      }),
                                    className: "w-full"
                                  }),
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextInput Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Medium Size (Default)",
                                      placeholder: "Medium input",
                                      size: "md",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Large Size",
                                      placeholder: "Large input",
                                      size: "lg",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextInput States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Default State",
                                      placeholder: "Default state",
                                      state: "default"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Hover State",
                                      placeholder: "Hover state",
                                      state: "hover"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Focused State",
                                      placeholder: "Focused state",
                                      state: "focused"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Filled State",
                                      placeholder: "Filled state",
                                      state: "filled",
                                      value: "This input is filled"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Error State",
                                      placeholder: "Error state",
                                      state: "error",
                                      errorMessage: "This field has an error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Success State",
                                      placeholder: "Success state",
                                      state: "success",
                                      successMessage: "This field is valid"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Disabled State",
                                      placeholder: "Disabled state",
                                      state: "disabled"
                                    })
                              ],
                              className: "grid grid-cols-1 md:grid-cols-2 gap-4"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextInput with Icons",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "With Left Icon",
                                      leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Search, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      placeholder: "Search...",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "With Right Icon",
                                      placeholder: "Enter email",
                                      rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Mail, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "With Both Icons",
                                      leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Search, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      placeholder: "Search location",
                                      rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.MapPin, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextInput Types",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Text Input",
                                      placeholder: "Enter text",
                                      className: "w-full",
                                      type_: "text"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Password Input",
                                      placeholder: "Enter password",
                                      rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Lock, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      value: match$1[0],
                                      onChange: (function (e) {
                                          setPasswordValue(function (param) {
                                                return e.target.value;
                                              });
                                        }),
                                      className: "w-full",
                                      type_: "password"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Number Input",
                                      placeholder: "Enter number",
                                      value: match$2[0],
                                      onChange: (function (e) {
                                          setNumberValue(function (param) {
                                                return e.target.value;
                                              });
                                        }),
                                      className: "w-full",
                                      type_: "number"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Email Input",
                                      placeholder: "Enter email",
                                      value: match$3[0],
                                      onChange: (function (e) {
                                          setEmailValue(function (param) {
                                                return e.target.value;
                                              });
                                        }),
                                      className: "w-full",
                                      type_: "email"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "TextInput with Labels",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Main Label",
                                      placeholder: "With main label",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "With Sublabel",
                                      placeholder: "With sublabel",
                                      sublabel: "Additional information about this field",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      hintText: "This is a hint to help you fill this field",
                                      label: "With Hint",
                                      placeholder: "With hint text",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "Mandatory Field",
                                      mandatory: true,
                                      placeholder: "This field is required",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.TextInput, {
                                      label: "With Info Tooltip",
                                      placeholder: "Hover over the info icon",
                                      infoTooltip: "This tooltip provides additional information about the field",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    })
              ],
              className: "p-4 space-y-8"
            });
}

var TextInputDemo = {
  make: TextInputDemo$TextInputDemo
};

export {
  TextInputDemo ,
}
/* react Not a pure module */
