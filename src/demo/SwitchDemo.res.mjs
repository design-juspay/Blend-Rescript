// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function SwitchDemo$SwitchDemo(props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsChecked = match[1];
  var isChecked = match[0];
  var match$1 = React.useState(function () {
        return ["option1"];
      });
  var setGroupValues = match$1[1];
  var groupValues = match$1[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Switch Demo",
                      className: "text-2xl font-bold mb-6 mt-12"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic Switch",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      isChecked: isChecked,
                                      onCheckedChange: (function (checked) {
                                          setIsChecked(function (param) {
                                                return checked;
                                              });
                                        }),
                                      label: "Toggle me"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Current state: " + (
                                        isChecked ? "On" : "Off"
                                      ),
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      size: "sm",
                                      label: "Small Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      size: "md",
                                      label: "Medium Switch"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      label: "Enabled Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      isChecked: true,
                                      label: "Checked Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      isDisabled: true,
                                      label: "Disabled Switch"
                                    }),
                                JsxRuntime.jsx(DesignSystem.Switch, {
                                      isChecked: true,
                                      isDisabled: true,
                                      label: "Disabled and Checked Switch"
                                    })
                              ],
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch with Subtext",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Switch, {
                                    label: "Switch with Subtext",
                                    subtext: "Additional information about this switch option"
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch with Right Slot",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.Switch, {
                                    label: "Switch with Icon",
                                    rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Check, {
                                              size: 16,
                                              color: "green"
                                            }))
                                  }),
                              className: "flex flex-col gap-4"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Switch Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.SwitchGroup, {
                              label: "Select multiple options",
                              name: "options",
                              value: groupValues,
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option1",
                                            label: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option2",
                                            label: "Option 2"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option3",
                                            label: "Option 3",
                                            subtext: "With additional description"
                                          })
                                    ],
                                    className: "flex flex-col gap-3"
                                  }),
                              onChange: (function (data) {
                                  setGroupValues(function (param) {
                                        return data.values;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Selected values: " + groupValues.join(", "),
                              className: "mt-2 text-sm text-gray-600"
                            })
                      ],
                      className: "mb-8"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Disabled Switch Group",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx(DesignSystem.SwitchGroup, {
                              label: "Disabled options group",
                              name: "disabled-options",
                              defaultValue: ["option1"],
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option1",
                                            label: "Option 1"
                                          }),
                                      JsxRuntime.jsx(DesignSystem.Switch, {
                                            value: "option2",
                                            label: "Option 2"
                                          })
                                    ],
                                    className: "flex flex-col gap-3"
                                  }),
                              isDisabled: true
                            })
                      ],
                      className: "mb-8"
                    })
              ]
            });
}

var SwitchDemo = {
  make: SwitchDemo$SwitchDemo
};

export {
  SwitchDemo ,
}
/* react Not a pure module */
