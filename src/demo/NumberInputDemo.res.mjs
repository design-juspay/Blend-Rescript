// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml from "rescript/lib/es6/caml.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as DesignSystem from "@vinitjuspay/design-system";

function NumberInputDemo$NumberInputDemo(props) {
  var match = React.useState(function () {
        return 0.0;
      });
  var setBasicValue = match[1];
  var basicValue = match[0];
  var match$1 = React.useState(function () {
        return 100.0;
      });
  var setCurrencyValue = match$1[1];
  var currencyValue = match$1[0];
  var match$2 = React.useState(function () {
        return 50.0;
      });
  var setPercentValue = match$2[1];
  var percentValue = match$2[0];
  var handleBasicChange = function (value) {
    setBasicValue(function (param) {
          return value;
        });
    console.log("Basic value changed: " + String(value));
  };
  var handleCurrencyChange = function (value) {
    setCurrencyValue(function (param) {
          return value;
        });
    console.log("Currency value changed: " + String(value));
  };
  var handlePercentChange = function (value) {
    setPercentValue(function (param) {
          return value;
        });
    console.log("Percent value changed: " + String(value));
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "NumberInput Components",
                      className: "text-2xl font-bold"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Basic NumberInput",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Basic Number Input",
                                      placeholder: "Enter a number",
                                      value: basicValue,
                                      onChange: handleBasicChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Current value: " + String(basicValue),
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput Sizes",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Small Size",
                                      placeholder: "Small input",
                                      size: "sm",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Medium Size (Default)",
                                      placeholder: "Medium input",
                                      size: "md",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Large Size",
                                      placeholder: "Large input",
                                      size: "lg",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput States",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Default State",
                                      placeholder: "Default state",
                                      state: "default"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Hover State",
                                      placeholder: "Hover state",
                                      state: "hover"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Focused State",
                                      placeholder: "Focused state",
                                      state: "focused"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Filled State",
                                      placeholder: "Filled state",
                                      state: "filled",
                                      value: 42.0
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Error State",
                                      placeholder: "Error state",
                                      state: "error",
                                      errorMessage: "This field has an error"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Success State",
                                      placeholder: "Success state",
                                      state: "success",
                                      successMessage: "This field is valid"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Disabled State",
                                      placeholder: "Disabled state",
                                      state: "disabled"
                                    })
                              ],
                              className: "grid grid-cols-1 md:grid-cols-2 gap-4"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput with Min, Max, Step",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      hintText: "Value must be between 0 and 100",
                                      label: "With Min and Max",
                                      placeholder: "Enter value between 0 and 100",
                                      value: basicValue,
                                      min: 0.0,
                                      max: 100.0,
                                      onChange: handleBasicChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      hintText: "Increments/decrements by 0.5",
                                      label: "With Custom Step",
                                      placeholder: "Step by 0.5",
                                      value: basicValue,
                                      min: 0.0,
                                      max: 10.0,
                                      step: 0.5,
                                      onChange: handleBasicChange,
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput with Icons",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Currency Input",
                                      leftSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.DollarSign, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      placeholder: "Enter amount",
                                      value: currencyValue,
                                      min: 0.0,
                                      step: 0.01,
                                      onChange: handleCurrencyChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Amount: $" + String(currencyValue),
                                      className: "text-sm text-gray-600"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Percentage Input",
                                      placeholder: "Enter percentage",
                                      rightSlot: Caml_option.some(JsxRuntime.jsx(LucideReact.Percent, {
                                                size: 18,
                                                className: "text-gray-400"
                                              })),
                                      value: percentValue,
                                      min: 0.0,
                                      max: 100.0,
                                      onChange: handlePercentChange,
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Percentage: " + String(percentValue) + "%",
                                      className: "text-sm text-gray-600"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput with Custom Steppers",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx(DesignSystem.NumberInput, {
                                    label: "Custom Stepper Icons",
                                    placeholder: "Try the steppers",
                                    rightSlot: Caml_option.some(JsxRuntime.jsxs("div", {
                                              children: [
                                                JsxRuntime.jsx("button", {
                                                      children: JsxRuntime.jsx(LucideReact.Plus, {
                                                            size: 14
                                                          }),
                                                      className: "text-gray-500 hover:text-blue-500 focus:outline-none",
                                                      onClick: (function (param) {
                                                          setBasicValue(function (prev) {
                                                                return prev + 1.0;
                                                              });
                                                        })
                                                    }),
                                                JsxRuntime.jsx("button", {
                                                      children: JsxRuntime.jsx(LucideReact.Minus, {
                                                            size: 14
                                                          }),
                                                      className: "text-gray-500 hover:text-blue-500 focus:outline-none",
                                                      onClick: (function (param) {
                                                          setBasicValue(function (prev) {
                                                                return Caml.float_max(0.0, prev - 1.0);
                                                              });
                                                        })
                                                    })
                                              ],
                                              className: "flex flex-col"
                                            })),
                                    value: basicValue,
                                    onChange: handleBasicChange,
                                    className: "w-full"
                                  }),
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "NumberInput with Labels",
                              className: "text-xl font-semibold mb-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "With Sublabel",
                                      placeholder: "With sublabel",
                                      sublabel: "Additional information about this field",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      hintText: "This is a hint to help you fill this field",
                                      label: "With Hint",
                                      placeholder: "With hint text",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "Mandatory Field",
                                      mandatory: true,
                                      placeholder: "This field is required",
                                      className: "w-full"
                                    }),
                                JsxRuntime.jsx(DesignSystem.NumberInput, {
                                      label: "With Info Tooltip",
                                      placeholder: "Hover over the info icon",
                                      infoTooltip: "This tooltip provides additional information about the field",
                                      className: "w-full"
                                    })
                              ],
                              className: "space-y-4 max-w-md"
                            })
                      ],
                      className: "border rounded p-4"
                    })
              ],
              className: "p-4 space-y-8"
            });
}

var NumberInputDemo = {
  make: NumberInputDemo$NumberInputDemo
};

var $$default = NumberInputDemo$NumberInputDemo;

export {
  NumberInputDemo ,
  $$default as default,
}
/* react Not a pure module */
